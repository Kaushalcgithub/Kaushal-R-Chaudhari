package com.example;

import java.util.Properties;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import javax.mail.*;
import javax.mail.internet.*;

public class StockMonitor {
    private static final String API_URL = "https://api.refinitiv.com";
    private static final String STOCK_SYMBOL = "TSX";
    private static final double THRESHOLD = 100.0; // example threshold
    private static final String EMAIL_1 = "kaushal7359@gmail.com";
    private static final String EMAIL_2 = "User1234@gmail.com";

    public static void main(String[] args) {
        Timer timer = new Timer();
        timer.schedule(new CheckStockTask(), 0, 60000); // Check every minute
    }

    static class CheckStockTask extends TimerTask {
        @Override
        public void run() {
            double stockPrice = fetchStockPrice();
            if (stockPrice > THRESHOLD) {
                String ticketNumber = generateTicketNumber();
                sendEmail(ticketNumber);
            }
        }

        private double fetchStockPrice() {
            // Refinitiv API call 
            return new Random().nextDouble() * 200; // Mocked price for demonstration
        }

        private String generateTicketNumber() {
            Random random = new Random();
            return "TSX" + String.format("%07d", random.nextInt(10000000));
        }

        private void sendEmail(String ticketNumber) {
            String subject = "Stock Alert: Support Ticket " + ticketNumber;
            String body = "A stock has crossed the threshold. Ticket Number: " + ticketNumber;

            Properties properties = new Properties();
            properties.put("mail.smtp.host", "smtp.example.com");
            properties.put("mail.smtp.port", "587");
            properties.put("mail.smtp.auth", "true");
            properties.put("mail.smtp.starttls.enable", "true");

            Session session = Session.getInstance(properties, new Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication("username", "password");
                }
            });

            try {
                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress("no-reply@example.com"));
                message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(EMAIL_1 + "," + EMAIL_2));
                message.setSubject(subject);
                message.setText(body);
                Transport.send(message);
                System.out.println("Email sent successfully");
            } catch (MessagingException e) {
                e.printStackTrace();
            }
        }
    }
}
